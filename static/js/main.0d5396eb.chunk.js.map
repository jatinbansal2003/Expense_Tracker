{"version":3,"sources":["logo.svg","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Expenses/Expenses.js","App.js","reportWebVitals.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","newExpenseData","id","Math","random","toString","onAddExpense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValue","dataPoints","map","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","expense","getMonth","ExpenseDate","toLocaleString","month","day","getFullYear","Card","classes","children","ExpenseItem","ExpensesList","length","ExpensesFilter","selected","onChangeFilter","Expenses","filteredYear","selectFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpense","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d5396eb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredDate(\"\");\r\n    setEnteredAmount(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          ></input>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n            value={enteredAmount}\r\n          ></input>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            onChange={dateChangeHandler}\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n          ></input>\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const onSaveDataHandler = (newExpenseData) => {\r\n    const expenseData = {\r\n      ...newExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    setIsEditing(false);\r\n    props.onAddExpense(expenseData);\r\n  };\r\n\r\n  const clickHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && <button onClick={clickHandler}>Add New Expense</button>}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveData={onSaveDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        ></ExpenseForm>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\nconst Chart = (props) => {\r\n  const dataPointValue = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValue);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          label={dataPoint.label}\r\n          maxValue={totalMaximum}\r\n          value={dataPoint.value}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\nexport default ExpensesChart;\r\n","import React from \"react\";\r\nimport \"./ExpenseDate.css\";\r\n\r\nfunction ExpenseDate(props) {\r\n  const date = props.date;\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">\r\n        {date.toLocaleString(\"en-US\", { month: \"long\" })}\r\n      </div>\r\n      <div className=\"expense-date__day\">\r\n        {date.toLocaleString(\"en-US\", { day: \"2-digit\" })}\r\n      </div>\r\n      <div className=\"expense-date__year\">{date.getFullYear()}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n// props passed due to wrapper component\r\nfunction Card(props) {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\nexport default Card;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nfunction ExpenseItem(props) {\r\n  const amount = props.amount;\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">$ {amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nconst ExpensesList = (props) => {\r\n  if (props.expenses.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No Expenses Found !!!</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.expenses.map((expenses) => (\r\n        <ExpenseItem\r\n          key={expenses.id}\r\n          title={expenses.title}\r\n          amount={expenses.amount}\r\n          date={expenses.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const filterChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={filterChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React, { useState } from \"react\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport Card from \"../UI/Card\";\r\nfunction Expenses(props) {\r\n  const [filteredYear, selectFilteredYear] = useState(\"2021\");\r\n  const filterChangeHandler = (selectedYear) => {\r\n    selectFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.expenses.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        onChangeFilter={filterChangeHandler}\r\n        selected={filteredYear}\r\n      ></ExpensesFilter>\r\n      <ExpensesChart expenses={filteredExpenses}></ExpensesChart>\r\n      <ExpensesList expenses={filteredExpenses}></ExpensesList>\r\n      {/* <ExpenseItem\r\n        title={props.expenses[0].title}\r\n        amount={props.expenses[0].amount}\r\n        date={props.expenses[0].date}\r\n      ></ExpenseItem>\r\n      <ExpenseItem\r\n        title={props.expenses[1].title}\r\n        amount={props.expenses[1].amount}\r\n        date={props.expenses[1].date}\r\n      ></ExpenseItem>\r\n      <ExpenseItem\r\n        title={props.expenses[2].title}\r\n        amount={props.expenses[2].amount}\r\n        date={props.expenses[2].date}\r\n      ></ExpenseItem>\r\n      <ExpenseItem\r\n        title={props.expenses[3].title}\r\n        amount={props.expenses[3].amount}\r\n        date={props.expenses[3].date}\r\n      ></ExpenseItem> */}\r\n    </Card>\r\n  );\r\n}\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nimport \"./App.css\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\nconst DUMMY_EXPENSES = [\n  // {\n  //   id: \"e1\",\n  //   title: \"Toilet Paper\",\n  //   amount: 94.12,\n  //   date: new Date(2020, 7, 14),\n  // },\n  // { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  // {\n  //   id: \"e3\",\n  //   title: \"Car Insurance\",\n  //   amount: 294.67,\n  //   date: new Date(2021, 2, 28),\n  // },\n  // {\n  //   id: \"e4\",\n  //   title: \"New Desk (Wooden)\",\n  //   amount: 450,\n  //   date: new Date(2021, 5, 12),\n  // },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpense) => {\n      return [expense, ...prevExpense];\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <NewExpense onAddExpense={addExpenseHandler}></NewExpense>\n\n      <Expenses expenses={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}